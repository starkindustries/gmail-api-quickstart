# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest google-api-python-client google-auth-httplib2 google-auth-oauthlib
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Set up google credentials
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}
      run: |
        echo ${{ secrets.GOOGLE_TOKEN }} > $GITHUB_WORKSPACE/token.json
    - name: Test with pytest
      env:
        MY_TEST_SECRET: ${{ secrets.MY_TEST_SECRET }}
      run: |
        pytest
    - name: Update GOOGLE_TOKEN secret with refreshed token
      env:
        GOOGLE_TOKEN: ${{ secrets.GOOGLE_TOKEN }}
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} # Reference gmail-api-quickstart token: https://github.com/settings/tokens?type=beta
      run: | 
        # Reference example:
        # https://docs.github.com/en/rest/actions/secrets?apiVersion=2022-11-28#create-or-update-an-organization-secret
        NEW_TOKEN=$(cat token.json)
        echo NEW_TOKEN: $NEW_TOKEN
        echo ACCESS_TOKEN: $ACCESS_TOKEN
        echo github.repository: ${{ github.repository }}
        curl -L -X PUT \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer $ACCESS_TOKEN" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/repos/${{ github.repository }}/actions/secrets/GOOGLE_TOKEN \
        -d '$NEW_TOKEN'
